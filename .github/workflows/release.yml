# GitHub Actions workflow for version bumping and package publishing
# This workflow creates a new version tag, builds the package, and publishes it to PyPI

name: Build and publish

on:
  workflow_dispatch:  # Manual trigger only
    inputs:
      tag:
        description: 'Release tag (e.g. v1.2.3)'
        required: true
        type: string

jobs:
  tag:
    name: Create Git Tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Create Git Tag
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git tag -a ${{ github.event.inputs.tag }} -m "Release ${{ github.event.inputs.tag }}"
          git push origin ${{ github.event.inputs.tag }}
          
  build:
    needs: tag
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Permission to write to repository contents (for creating releases)
    steps:
      # Step 1: Checkout the repository code
      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v4

      # Step 2: Build the package
      - name: build
        run: |
          pip install --upgrade build
          python -m build

      # Step 3: Upload artifact
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist  # This must match the name used in download step
          path: dist/

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: 
      - build
      - tag
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Create GitHub Release with artifacts
        uses: softprops/action-gh-release@v2.3.2
        with:
          tag_name: ${{ github.event.inputs.tag }}
          name: ${{ github.event.inputs.tag }}
          generate_release_notes: true
          files: dist/*

          
  # Job to publish the built package to PyPI
  publish:
    needs: build  # This job depends on the tag job
    runs-on: ubuntu-latest
    environment: release  # Use the release environment

    permissions:
      contents: read  # Read-only access to repository contents

    steps:
      # Step 1: Download the built package artifact
      - uses: actions/download-artifact@v4
        with:
          name: dist  # Name of the artifact
          path: dist  # Path to download the artifact to

      # todo: change to id-token
      - name: publish
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
